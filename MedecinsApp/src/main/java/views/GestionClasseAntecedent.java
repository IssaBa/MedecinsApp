/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.util.List;

import javax.swing.table.DefaultTableModel;

import dao.ClasseAntecedentDAO;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import models.ClasseAntecedent;

/**
 *
 * @author A663588
 */
public class GestionClasseAntecedent extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionClasseAntecedent
     */
    private final String AJOUTER = "AJOUTER CLASSE ANTECEDENT";
    private final String MODIFIER = "MODIFIER CLASSE ANTECEDENT";
    private final String SUPPRIMER = "SUPPRIMER CLASSE ANTECEDENT";

    ClasseAntecedentDAO dao;
    Long selectedTableID;
    String libeleModif = null;
    private static final Logger LOGGER = Logger.getLogger(GestionClasseAntecedent.class.getName());

    public void remplirTableClasseAntecedent() {
        DefaultTableModel model = new DefaultTableModel();
        try {
            model.setRowCount(0);

            model.setColumnIdentifiers(new String[]{"ID", "LIBELLE"});

            List<ClasseAntecedent> classeAntecedents = dao.findAll();

            for (int i = 0; i < classeAntecedents.size(); i++) {
                model.addRow(new Object[]{classeAntecedents.get(i).getId(), classeAntecedents.get(i).getLibelle()});
            }
            tableClasseAntecedent.setModel(model);
            /*
        HIDE IDs
             */
            tableClasseAntecedent.getColumnModel().getColumn(0).setMinWidth(0);
            tableClasseAntecedent.getColumnModel().getColumn(0).setMaxWidth(0);
            tableClasseAntecedent.getColumnModel().getColumn(0).setWidth(0);

        } catch (Exception e) {
            LOGGER.log(Level.SEVERE, e.getMessage(), e);
        }

    }

    public void checkChoixSelect() {
        String choixAction = comboChoix.getSelectedItem().toString();
        if (choixAction.isEmpty()) {
            desactiverChamps();
        } else if (choixAction.equalsIgnoreCase(AJOUTER)) {
            activerChamps();
            choixBTX.setText(AJOUTER);
        } else if (choixAction.equalsIgnoreCase(MODIFIER)) {
            activerChamps();
            choixBTX.setText(MODIFIER);
        } else if (choixAction.equalsIgnoreCase(SUPPRIMER)) {
            libelleClasseTxt.setEnabled(false);
            choixBTX.setEnabled(true);
            choixBTX.setText(SUPPRIMER);
        }
    }

    public void remplirComboChoix() {
        comboChoix.removeAll();
        comboChoix.addItem("");
        comboChoix.addItem(AJOUTER);
        comboChoix.addItem(MODIFIER);
        comboChoix.addItem(SUPPRIMER);
    }

    public void desactiverChamps() {
        libelleClasseTxt.setEnabled(false);
        choixBTX.setEnabled(false);
    }

    public void activerChamps() {
        libelleClasseTxt.setEnabled(true);
        choixBTX.setEnabled(true);
    }

    public void viderChamps() {
        libelleClasseTxt.setText("");
    }

    private void refreshAll() {
        desactiverChamps();
        remplirTableClasseAntecedent();
        remplirComboChoix();
    }

    public GestionClasseAntecedent() {
        initComponents();
        dao = new ClasseAntecedentDAO();
        refreshAll();
        choixBTX.setText("Aucune action");
        choixBTX.setEnabled(false);
    }

    public void afterActionChoix() {
        tableClasseAntecedent.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        comboChoix = new javax.swing.JComboBox<>();
        libelle = new javax.swing.JLabel();
        libelleClasseTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClasseAntecedent = new javax.swing.JTable();
        choixBTX = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Gestion des classes d'antécédent");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Choix Action");

        comboChoix.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        comboChoix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboChoixActionPerformed(evt);
            }
        });

        libelle.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        libelle.setText("Nom de la classe ");

        libelleClasseTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        tableClasseAntecedent.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tableClasseAntecedent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tableClasseAntecedent.setRowHeight(25);
        tableClasseAntecedent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClasseAntecedentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClasseAntecedent);

        choixBTX.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        choixBTX.setText("jButton2");
        choixBTX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choixBTXActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(libelle))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboChoix, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(libelleClasseTxt)))
                            .addComponent(jSeparator1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(78, Short.MAX_VALUE)
                        .addComponent(choixBTX, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(comboChoix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(libelle)
                            .addComponent(libelleClasseTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(choixBTX, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboChoixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboChoixActionPerformed
        tableClasseAntecedent.clearSelection();
        checkChoixSelect();
    }//GEN-LAST:event_comboChoixActionPerformed

    private void tableClasseAntecedentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClasseAntecedentMouseClicked
        String action = (String) comboChoix.getSelectedItem();
        selectedTableID = null;
        DefaultTableModel defaultTableModel = (DefaultTableModel) tableClasseAntecedent.getModel();
        int selectRowsIndex = tableClasseAntecedent.getSelectedRow();

        if (action.isEmpty()) {
            tableClasseAntecedent.clearSelection();
            JOptionPane.showMessageDialog(this, "Merci de choisir une action", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
        } else if (action.equals(MODIFIER) || action.equals(SUPPRIMER)) {
            try {
                selectedTableID = (Long) defaultTableModel.getValueAt(selectRowsIndex, 0);
                ClasseAntecedent classeA = dao.findById(selectedTableID);
                if (classeA != null) {
                    libelleClasseTxt.setText(classeA.getLibelle());
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Champ selectionné invalide ! Veuillez réessayer", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_tableClasseAntecedentMouseClicked

    private void choixBTXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choixBTXActionPerformed
        if (comboChoix.getSelectedItem().toString().equalsIgnoreCase(AJOUTER)) {
            if (!libelleClasseTxt.getText().isEmpty()) {
                ClasseAntecedent classeAntCheck = dao.findByLibelle(libelleClasseTxt.getText());
                if (classeAntCheck == null) {
                    ClasseAntecedent classeAntNew = new ClasseAntecedent(libelleClasseTxt.getText());
                    if (dao.save(classeAntNew)) {
                        JOptionPane.showMessageDialog(this, "CLASSE AJOUTEE AVEC SUCCES", "GESTION ANTECEDENT", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "ECHEC AJOUT DE LA CLASSE !", "GESTION ANTECEDENT", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "UNE CLASSE PORTE DEJA CE NOM", "GESTION ANTECEDENT", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } else {
                JOptionPane.showMessageDialog(this, "LE LIBELLE EST OBLIGATOIRE", "GESTION MEDECIN", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (comboChoix.getSelectedItem().toString().equalsIgnoreCase(MODIFIER)) {
            if (selectedTableID == null) {
                JOptionPane.showMessageDialog(this, "Champ sélectionné invalide ! Veuillez réessayer", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                if (!libelleClasseTxt.getText().isEmpty()) {

                    ClasseAntecedent classeAntToUpdate = dao.findById(selectedTableID);
                    if (classeAntToUpdate != null) {
                        classeAntToUpdate.setLibelle(libelleClasseTxt.getText());
                        if (dao.update(classeAntToUpdate)) {
                            JOptionPane.showMessageDialog(null, "CLASSE MODIFIEE AVEC SUCCES", "GESTION DES ANTECEDENTS", JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(null, "ECHEC MODIFICATION DE LA CLASSE ! ", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "TOUS LES CHAMPS SONT OBLIGATOIRES MERCI", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
        } else if (comboChoix.getSelectedItem().toString().equalsIgnoreCase(SUPPRIMER)) {
            if (selectedTableID == null) {
                JOptionPane.showMessageDialog(this, "Champ sélectionné invalide ! Veuillez réessayer", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                return;
            } else {
                ClasseAntecedent classeAntToDelete = dao.findById(selectedTableID);
                if (classeAntToDelete != null) {
                    if (dao.delete(classeAntToDelete)) {
                        JOptionPane.showMessageDialog(this, "CLASSE SUPPRIMEE AVEC SUCCES", "GESTION DES ANTECEDENTS", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "ECHEC SUPPRESSION DE LA CLASSE ! \nAVEZ VOUS SUPPRIME TOUS LES ANTECEDENTS DE CETTE CLASSE AU PREALABLE ?", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "CLASSE INTROUVABLE !", "GESTION DES ANTECEDENTS", JOptionPane.ERROR_MESSAGE);
                }

            }

        }

        remplirTableClasseAntecedent();
        viderChamps();
        desactiverChamps();
        comboChoix.setSelectedIndex(0);
        choixBTX.setEnabled(false);
        choixBTX.setText("Aucune action");
        selectedTableID = null;
    }//GEN-LAST:event_choixBTXActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choixBTX;
    private javax.swing.JComboBox<String> comboChoix;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel libelle;
    private javax.swing.JTextField libelleClasseTxt;
    private javax.swing.JTable tableClasseAntecedent;
    // End of variables declaration//GEN-END:variables
}
